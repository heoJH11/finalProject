<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
           				http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
		<!-- Root Context: defines shared resources visible to all other web components -->
		<bean id="uploadFolder" class="java.lang.String">
			<constructor-arg value="D:\\team2\\upload"></constructor-arg>
		</bean>
	 
	<bean id="dataSource" 
		class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@112.220.114.130:1521:xe" />
		<property name="username" value="team2_202309F" />
		<property name="password" value="java" />
	</bean>
	
	<bean id="sqlSessionFactory"
	class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="mapperLocations" value="classpath:/sqlmap/**/*_SQL.xml" />
		<property name="configLocation" value="/WEB-INF/mybatisAlias/mybatisAlias.xml" />
	</bean>
	
	<bean id="sqlSessionTemplate"
	class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	
	<!-- Mapper 인터페이스 설정 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="kr.or.ddit.**.**.mapper" />
	</bean>
	<!-- Mapper 인터페이스 설정 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="kr.or.ddit.**.mapper" />
	</bean>
	<!-- Mapper 인터페이스 설정 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="kr.or.ddit.**.**.mapper" />
	</bean>
	
	<!-- 파일 업로드 설정 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 파일업로드 용량 (10MB)-->
		<property name="maxUploadSize" value="10485760"/>
		<property name="defaultEncoding" value="UTF-8" />
	</bean>

	<bean id="uploadFolderDirect" class="java.lang.String">
		<constructor-arg value="D:\\develop\\eGovFrameDev-3.10.0-64bit\\workspace\\.metadata\\.plugins\\org.eclipse.wst.server.core\\tmp0\\wtpwebapps\\finalProject\\resources\\ckFolder"></constructor-arg>
	</bean>
	
	<!-- 이메일 관련 빈 등록 -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com"></property>
		<property name="port" value="587"></property>
		<property name="username" value="ddit230901@gmail.com"></property>
		<property name="password" value="S m k c b b o b x w u k t j g a"></property>
		<property name="javaMailProperties">
			<props>
				<prop key="mail.transport.protocol">smtp</prop>
	            <prop key="mail.smtp.auth">true</prop>
	            <!-- gmail의 경우 보안문제 업데이트로 인해 SSLSocketFactory를 추가해야 smtp 사용 가능. -->
	            <prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
	            <prop key="mail.smtp.starttls.enable">true</prop>
	            <prop key="mail.debug">true</prop>
	            <prop key="mail.smtp.ssl.trust">smtp.gmail.com</prop>
				<prop key="mail.smtp.ssl.protocols">TLSv1.2</prop>
			</props>
		</property>
	</bean>
	
	<!-- 트랜잭션 관리자의 빈을 정의 -->
   <bean id="transactionManager" 
      class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
      <property name="dataSource" ref="dataSource"></property>
   </bean>
   
    <aop:config>
    <!-- 포인트컷 설정 -->
	    <aop:pointcut id="serviceMethods" expression="execution(* kr.or.ddit..*Service.*(..))"/>
    <!-- Advisor 설정 -->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethods"/>
    </aop:config>

    <!-- 트랜잭션 설정 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="insert**" rollback-for="RuntimeException"></tx:method>
            <tx:method name="create**" rollback-for="RuntimeException"></tx:method>
            <tx:method name="update**" rollback-for="RuntimeException"></tx:method>
            <tx:method name="delete**" rollback-for="RuntimeException"></tx:method>
            <tx:method name="uploads**" rollback-for="RuntimeException"></tx:method>
            <tx:method name="select**" read-only="true"></tx:method>
            <tx:method name="get**" read-only="true"></tx:method>
        </tx:attributes>
    </tx:advice>
    
     <!-- AOP Pointcut/Advisor 설정 -->
   
</beans>
